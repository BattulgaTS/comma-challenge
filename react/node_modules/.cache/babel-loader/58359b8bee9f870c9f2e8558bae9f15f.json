{"ast":null,"code":"import _classCallCheck from \"/Users/tulga/Code/Projects/comma-challenge/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tulga/Code/Projects/comma-challenge/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tulga/Code/Projects/comma-challenge/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tulga/Code/Projects/comma-challenge/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tulga/Code/Projects/comma-challenge/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tulga/Code/Projects/comma-challenge/react/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Leafmap from './map';\nimport speedChart from './chart';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      commaData: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:8080/api/comma-data').then(function (res) {\n        _this2.setState({\n          commaData: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Leafmap, {\n        data: this.state.commaData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tulga/Code/Projects/comma-challenge/react/src/App.js"],"names":["React","Component","axios","Leafmap","speedChart","App","state","commaData","get","then","res","setState","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,UAAP,MAAuB,SAAvB;;IAEMC,G;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,SAAS,EAAE;AADJ,K;;;;;;wCAGc;AAAA;;AACpBL,MAAAA,KAAK,CAACM,GAAN,CAAU,sCAAV,EACIC,IADJ,CACU,UAACC,GAAD,EAAS;AACf,QAAA,MAAI,CAACC,QAAL,CAAe;AACdJ,UAAAA,SAAS,EAAEG,GAAG,CAACE;AADD,SAAf;AAGA,OALJ;AAMA;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAlBeN,S;;AAqBlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport './App.css';\nimport Leafmap from './map'\nimport speedChart from './chart';\n\nclass App extends Component {\n\tstate = {\n\t\tcommaData: []\n\t}\n  componentDidMount () {\n  \taxios.get('http://localhost:8080/api/comma-data')\n      .then( (res) => {\n      \tthis.setState( {\n      \t\tcommaData: res.data\n      \t})\n      })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Leafmap data={this.state.commaData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
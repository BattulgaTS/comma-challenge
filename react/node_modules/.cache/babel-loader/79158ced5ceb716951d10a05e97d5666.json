{"ast":null,"code":"import _classCallCheck from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tulga/Code/Projects/comma-challenge/src/map.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: $(props -> props.width);\\n  height: $(props -> props.height);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nvar Wrapper = styled.div(_templateObject());\n\nvar Leafmap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Leafmap, _Component);\n\n  function Leafmap() {\n    _classCallCheck(this, Leafmap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Leafmap).apply(this, arguments));\n  }\n\n  _createClass(Leafmap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.map = L.map('map', {\n        center: {\n          lat: 37.77,\n          lng: -122.43\n        },\n        zoom: 15,\n        zoomControl: false\n      });\n      L.tileLayer(\"https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png\", {\n        detectRetina: true,\n        maxZoom: 20,\n        maxNativeZoom: 17\n      }).addTo(this.map); // window.load ( () => {\n      // });\n\n      document.addEventListener(\"DOMContentLoaded\", function () {\n        _this.map.invalidateSize();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wrapper, {\n        height: \"1200px\",\n        width: \"720px\",\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Leafmap;\n}(Component);\n\nexport default Leafmap;","map":{"version":3,"sources":["/Users/tulga/Code/Projects/comma-challenge/src/map.js"],"names":["React","Component","L","styled","Wrapper","div","Leafmap","map","center","lat","lng","zoom","zoomControl","tileLayer","detectRetina","maxZoom","maxNativeZoom","addTo","document","addEventListener","invalidateSize"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;;IAKMC,O;;;;;;;;;;;;;wCACgB;AAAA;;AAClB,WAAKC,GAAL,GAAWL,CAAC,CAACK,GAAF,CAAM,KAAN,EAAa;AACtBC,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,KAAN;AAAaC,UAAAA,GAAG,EAAE,CAAC;AAAnB,SADc;AAEtBC,QAAAA,IAAI,EAAE,EAFgB;AAGtBC,QAAAA,WAAW,EAAE;AAHS,OAAb,CAAX;AAKAV,MAAAA,CAAC,CAACW,SAAF,CAAY,yDAAZ,EAAuE;AACrEC,QAAAA,YAAY,EAAE,IADuD;AAErEC,QAAAA,OAAO,EAAE,EAF4D;AAGrEC,QAAAA,aAAa,EAAE;AAHsD,OAAvE,EAIGC,KAJH,CAIS,KAAKV,GAJd,EANkB,CAWlB;AAEA;;AACAW,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,QAAA,KAAI,CAACZ,GAAL,CAASa,cAAT;AACD,OAFD;AAGD;;;6BACS;AACR,aAAO,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAC,OAA/B;AAAuC,QAAA,EAAE,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EArBmBnB,S;;AAyBtB,eAAeK,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: $(props -> props.width);\n  height: $(props -> props.height);\n`;\n\nclass Leafmap extends Component {\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: {lat: 37.77, lng: -122.43},\n      zoom: 15,\n      zoomControl: false\n    })\n    L.tileLayer(\"https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png\", {\n      detectRetina: true,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n    }).addTo(this.map);\n    // window.load ( () => {\n    \n    // });\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      this.map.invalidateSize()\n    });\n  }\n  render () {\n    return <Wrapper height=\"1200px\" width=\"720px\" id=\"map\"/>\n  }\n}\n\n\nexport default Leafmap;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/tulga/Code/Projects/comma-challenge/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tulga/Code/Projects/comma-challenge/src/map.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: $(props -> props.width);\\n  height: $(props -> props.height);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nimport * as data from './comma-data/';\nvar Wrapper = styled.div(_templateObject());\n\nvar Leafmap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Leafmap, _Component);\n\n  function Leafmap() {\n    _classCallCheck(this, Leafmap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Leafmap).apply(this, arguments));\n  }\n\n  _createClass(Leafmap, [{\n    key: \"dataLoader\",\n    value: function dataLoader() {// \n      // context.keys().forEach(function (key) {\n      //     obj[key] = context(key);\n      // });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.map = L.map('map', {\n        center: {\n          lat: 37.77,\n          lng: -122.43\n        },\n        zoom: 15,\n        zoomControl: false\n      });\n      L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}\", {\n        detectRetina: true,\n        maxZoom: 20,\n        maxNativeZoom: 17\n      }).addTo(this.map);\n      setTimeout(function () {\n        return _this.map.invalidateSize();\n      }, 10);\n      console.log(data); // var pointA = new L.LatLng(37.77, -122.43);\n      // var pointB = new L.LatLng(27.77, -122.43);\n      // var pointList = [pointA, pointB];\n      // var firstpolyline = new L.Polyline(pointList, {\n      //     color: 'red',\n      //     weight: 3,\n      //     opacity: 0.5,\n      //     smoothFactor: 1\n      // });\n      // firstpolyline.addTo(this.map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wrapper, {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Leafmap;\n}(Component);\n\nexport default Leafmap;","map":{"version":3,"sources":["/Users/tulga/Code/Projects/comma-challenge/src/map.js"],"names":["React","Component","L","styled","data","Wrapper","div","Leafmap","map","center","lat","lng","zoom","zoomControl","tileLayer","detectRetina","maxZoom","maxNativeZoom","addTo","setTimeout","invalidateSize","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEA,IAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV,mBAAb;;IAKMC,O;;;;;;;;;;;;;iCACU,CACZ;AACA;AACA;AACA;AAED;;;wCACmB;AAAA;;AAClB,WAAKC,GAAL,GAAWN,CAAC,CAACM,GAAF,CAAM,KAAN,EAAa;AACtBC,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,KAAN;AAAaC,UAAAA,GAAG,EAAE,CAAC;AAAnB,SADc;AAEtBC,QAAAA,IAAI,EAAE,EAFgB;AAGtBC,QAAAA,WAAW,EAAE;AAHS,OAAb,CAAX;AAKAX,MAAAA,CAAC,CAACY,SAAF,CAAY,kGAAZ,EAAgH;AAC9GC,QAAAA,YAAY,EAAE,IADgG;AAE9GC,QAAAA,OAAO,EAAE,EAFqG;AAG9GC,QAAAA,aAAa,EAAE;AAH+F,OAAhH,EAIGC,KAJH,CAIS,KAAKV,GAJd;AAMAW,MAAAA,UAAU,CAAE;AAAA,eAAM,KAAI,CAACX,GAAL,CAASY,cAAT,EAAN;AAAA,OAAF,EAAmC,EAAnC,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EAbkB,CAclB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD;;;6BACS;AACR,aAAO,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAtCmBH,S;;AA0CtB,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nimport * as data from './comma-data/';\n\nconst Wrapper = styled.div`\n  width: $(props -> props.width);\n  height: $(props -> props.height);\n`;\n\nclass Leafmap extends Component {\n  dataLoader () {\n    // \n    // context.keys().forEach(function (key) {\n    //     obj[key] = context(key);\n    // });\n    \n  }\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: {lat: 37.77, lng: -122.43},\n      zoom: 15,\n      zoomControl: false\n    })\n    L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}\", {\n      detectRetina: true,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n    }).addTo(this.map);\n\n    setTimeout( () => this.map.invalidateSize(), 10 )\n    console.log(data)\n    // var pointA = new L.LatLng(37.77, -122.43);\n    // var pointB = new L.LatLng(27.77, -122.43);\n    // var pointList = [pointA, pointB];\n\n    // var firstpolyline = new L.Polyline(pointList, {\n    //     color: 'red',\n    //     weight: 3,\n    //     opacity: 0.5,\n    //     smoothFactor: 1\n    // });\n    // firstpolyline.addTo(this.map);\n    \n\n  }\n  render () {\n    return <Wrapper id=\"map\"/>\n  }\n}\n\n\nexport default Leafmap;"]},"metadata":{},"sourceType":"module"}